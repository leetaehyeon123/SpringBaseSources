/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-07-29 13:36:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/harry/OneDrive/바탕%20화면/SpringData/쏘스코드/움직이는%20div%20쏘스코드/SpringTest/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Test/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1592852987131L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!doctype html>\n");
      out.write("<html onmouseup='mydragg.stopMoving();'>\n");
      out.write("    <head >\n");
      out.write("\n");
      out.write("        <script>\n");
      out.write("        var id;\n");
      out.write("            var mydragg = function(){\n");
      out.write("                return {\n");
      out.write("                    move : function(divid,xpos,ypos){\n");
      out.write("                        divid.style.left = xpos + 'px';\n");
      out.write("                        divid.style.top = ypos + 'px';\n");
      out.write("                    },\n");
      out.write("                    startMoving : function(divid,evt){\n");
      out.write("                        id=divid;\n");
      out.write("                        evt = evt || window.event;\n");
      out.write("                        var posX = evt.clientX,\n");
      out.write("                            posY = evt.clientY,\n");
      out.write("                        divTop = divid.style.top,\n");
      out.write("                        divLeft = divid.style.left,\n");
      out.write("                        eWi = parseInt(divid.style.width),\n");
      out.write("                        eHe = parseInt(divid.style.height);\n");
      out.write("                        \n");
      out.write("               \n");
      out.write("                        divid.style.cursor='move';\n");
      out.write("                        divTop = divTop.replace('px','');\n");
      out.write("                        divLeft = divLeft.replace('px','');\n");
      out.write("                        var diffX = posX - divLeft,\n");
      out.write("                            diffY = posY - divTop;\n");
      out.write("                        document.onmousemove = function(evt){\n");
      out.write("                            evt = evt || window.event;\n");
      out.write("                            var posX = evt.clientX,\n");
      out.write("                                posY = evt.clientY,\n");
      out.write("                                aX = posX - diffX,\n");
      out.write("                                aY = posY - diffY;\n");
      out.write("                            if (aX <= 0) aX = 0;\n");
      out.write("                            if (aY <= 0) aY = 0;\n");
      out.write("                            if (aX + eWi >= document.body.offsetWidth ) aX = document.body.offsetWidth  - eWi;\n");
      out.write("                            if (aY + eHe >= document.body.offsetHeight) aY = document.body.offsetHeight -eHe;\n");
      out.write("                            mydragg.move(divid,aX,aY);\n");
      out.write("                        }\n");
      out.write("                    },\n");
      out.write("                    stopMoving : function(){\n");
      out.write("\n");
      out.write("                        id.style.cursor='default';\n");
      out.write("                        document.onmousemove = function(){}\n");
      out.write("                    },\n");
      out.write("                }\n");
      out.write("            }();\n");
      out.write("\n");
      out.write("        </script>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("    <div style=\"width: 100%; height: 100vh\">\n");
      out.write("            <div class=\"elem\" onmousedown='mydragg.startMoving(this,event);'  style=\"width: 200px;height: 500px;background-color: gray;position: absolute;\">\n");
      out.write("                <div style='width:100%;height:100%;padding:10px'>\n");
      out.write("            \t\t<p>hi</p>\n");
      out.write("            \t\t<p>hi</p>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("                    <div class=\"elem\" onmousedown='mydragg.startMoving(this,event);'  style=\"width: 200px;height: 500px;background-color:blue;position: absolute;\">\n");
      out.write("                <div style='width:100%;height:100%;padding:10px'>\n");
      out.write("            \t\t<p>hi</p>\n");
      out.write("            \t\t<p>hi</p>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("                    <div class=\"elem\" onmousedown='mydragg.startMoving(this,event);'  style=\"width: 200px;height: 500px;background-color: red;position: absolute;\">\n");
      out.write("                <div style='width:100%;height:100%;padding:10px'>\n");
      out.write("            \t\t<p>hi</p>\n");
      out.write("            \t\t<p>hi</p>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("           \n");
      out.write("\t</div>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
