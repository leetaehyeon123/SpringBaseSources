/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-09-01 03:18:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.HashMap;
import java.util.ArrayList;

public final class boardForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");
String id=(String)session.getAttribute("id"); 
      out.write("\r\n");
      out.write("    ");

    ArrayList<HashMap<String,String>> list=(ArrayList<HashMap<String,String>>)request.getAttribute("list"); 
    int pageNum=Integer.parseInt((String)request.getParameter("pageNum"));
    int pageIdx=0;
    
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function insertReview(mode,i){\t\r\n");
      out.write("\t\t$.ajax({ \r\n");
      out.write("\t\ttype: 'get' , \r\n");
      out.write("\t\turl: 'review?mode='+mode+'&reviewCon='+$('#reviewText'+i).val()+'&reviewId=");
      out.print(id);
      out.write("&boardNum='+i ,\r\n");
      out.write("\t\tsuccess: function(data) { \r\n");
      out.write("\t\t\t$(\"#reviewDiv\"+i).html(data); \r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t}); \r\n");
      out.write("\t\tif(mode=='insert'){\r\n");
      out.write("\t\t$('#reviewText'+i).val('');\r\n");
      out.write("\t\t$('#reviewText'+i).focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("}\r\n");
      out.write("function enterKey(i){\r\n");
      out.write("\t   if (window.event.keyCode == 13) {\r\n");
      out.write("\t\t\tinsertReview('insert',i);\r\n");
      out.write("      }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<input id=\"isLoadAll\" type=\"hidden\" value=\"false\"> \r\n");
for(int i=list.size()-1; i>=0;i--) {pageIdx++;
      out.write('\r');
      out.write('\n');
      out.write('	');
 if(pageIdx<=pageNum*10) {
      out.write("\r\n");
      out.write("\t<div style=\"width: 100%; border: 1px gray solid; margin-bottom: 5px; background-color: white;\">\r\n");
      out.write("\t<div style=\"border-bottom: 1px gray solid;margin: 3px;\">");
      out.print(i);
      out.write(" . 작성자 : ");
      out.print(list.get(i).get("boardId"));
      out.write("</div><!-- id -->\r\n");
      out.write("\t<div style=\"border-bottom: 0.5px solid gray; width: 99%; margin: 0px auto;\">\r\n");
      out.write("\t<div style=\"margin: 3px;\">[ 사 진 부 ]</div><!-- 사진  -->\r\n");
      out.write("\t<div style=\"margin: 3px;\">");
      out.print(list.get(i).get("boardCon"));
      out.write("</div><!-- 내용  -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id='reviewDiv");
      out.print(i);
      out.write("'></div><!-- 댓글 -->\r\n");
      out.write("\t<div><!-- 댓글 달기 상자  -->\r\n");
      out.write("\t<input id='reviewText");
      out.print(i);
      out.write("' type=\"text\" style=\"border:0px; border-top:1px solid black;\" placeholder=\"댓글을 입력하세요\" onkeydown=\"enterKey(");
      out.print(i);
      out.write(")\">\r\n");
      out.write("\t<input id=\"reviewBtn\" type=\"button\" style=\"\" value=\"작성\" onclick=\"insertReview('insert','");
      out.print(i);
      out.write("')\">\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script type=\"text/javascript\">insertReview('select','");
      out.print(i);
      out.write("')</script>\r\n");
      out.write("\t\t");
if(i==0){
      out.write("\r\n");
      out.write("\t\t\t<script type=\"text/javascript\">$('#isLoadAll').val('true')</script>\r\n");
      out.write("\t\t\t<div style=\"width: 100%; margin-bottom: 5px; text-align: center; \">마지막 게시글 입니다.</div>\r\n");
      out.write("\t\t");
} 
      out.write('\r');
      out.write('\n');
      out.write('	');
}else{
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">$('#isLoadAll').val('false')</script>\r\n");
      out.write("\t\t<div style=\"width: 100%;  margin-bottom: 5px;text-align: center; \"> <img src=\"resources/img/loadding.gif\" alt=\"this slowpoke moves\"  width=50/> </div>\r\n");
      out.write("\t");
break;}
      out.write('\r');
      out.write('\n');
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
