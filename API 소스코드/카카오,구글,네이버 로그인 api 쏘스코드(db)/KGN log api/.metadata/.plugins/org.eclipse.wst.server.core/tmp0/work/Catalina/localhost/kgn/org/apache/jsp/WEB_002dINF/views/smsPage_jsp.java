/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-08-30 08:25:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class smsPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("input{\r\n");
      out.write("\tmargin: 5px;\r\n");
      out.write("\tfont-size: 20px;\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function smsDo(t){\r\n");
      out.write("\tvar tt=t.form;\r\n");
      out.write("\t\r\n");
      out.write("\t\t$.ajax({ \r\n");
      out.write("\t\t\ttype: 'get' , \r\n");
      out.write("\t\t\turl: 'smsPage.do?to='+t.form.phoneNum.value\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\ttt.phoneNum.setAttribute('readonly','readonly');\r\n");
      out.write("\t\ttt.phoneNumBtn.setAttribute('disabled','disabled');\r\n");
      out.write("\t\ttt.code.focus();\r\n");
      out.write("\t\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function isCode(t){\r\n");
      out.write("\tvar tt=t.form;\r\n");
      out.write("\t\t$.ajax({ \r\n");
      out.write("\t\t\ttype: 'get' , \r\n");
      out.write("\t\t\turl: 'smsIsCode.do?code='+tt.code.value\t,\r\n");
      out.write("\t\t\tsuccess: function(data) { \r\n");
      out.write("\t\t\t\tif(data=='true'){\r\n");
      out.write("\t\t\t\t\ttt.code.setAttribute('readonly','readonly');\r\n");
      out.write("\t\t\t\t\ttt.codeBtn.setAttribute('disabled','disabled');\r\n");
      out.write("\t\t\t\t\ttt.nextBtn.removeAttribute('disabled')\r\n");
      out.write("\t\t\t\t\ttt.nextBtn.style.backgroundColor=\"#61e5ff\";\r\n");
      out.write("\t\t\t\t\ttt.codeBtn.value='인증완료'\r\n");
      out.write("\t\t\t\t\t}else if(data=='false'){\r\n");
      out.write("\t\t\t\t\t\talert(\"인증 코드 틀림\");\r\n");
      out.write("\t\t\t\t\t\ttt.phoneNumBtn.removeAttribute('disabled');\r\n");
      out.write("\t\t\t\t\t\ttt.phoneNumBtn.value=\"인증번호 재전송\"\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} \t\r\n");
      out.write("\t\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div style=\"width: 100%; text-align: center;\">\r\n");
      out.write("<h1>본인인증</h1>\r\n");
      out.write("<p>처음 소셜 로그인시 휴대폰 인증 합니다.</p>\r\n");
      out.write("<p>같은 휴대폰 번호로 인증한 계정은 자동 연동 됩니다.</p>\r\n");
      out.write("<form action=\"signIn.do\">\r\n");
      out.write("\t<input name=\"platform\" type=\"hidden\" value='");
      out.print(session.getAttribute("platform") );
      out.write("'>\r\n");
      out.write("\t<input name=\"email\" type=\"hidden\" value='");
      out.print(session.getAttribute("email") );
      out.write("'>\r\n");
      out.write("\t<input name=\"phoneNum\" type=\"text\" placeholder=\"전화 번호\"  ><br>\r\n");
      out.write("\t<input name=\"phoneNumBtn\" type=\"button\" value=\"인증번호 전송\"  onclick=\"smsDo(this)\"><br>\r\n");
      out.write("\r\n");
      out.write("\t<input name=\"code\" type=\"text\" placeholder=\"인증번호 입력\"><br>\r\n");
      out.write("\t<input name=\"codeBtn\" type=\"button\" value=\"인증번호 확인\"  onclick=\"isCode(this)\"><br>\r\n");
      out.write("\t<input name=\"nextBtn\" type=\"submit\" value=\"다음\" disabled=\"disabled\" >\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
